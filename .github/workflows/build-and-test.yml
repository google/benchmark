name: build-and-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # TODO: add 32-bit builds (g++ and clang++) for ubuntu
  #   (requires g++-multilib and libc6:i386)
  # TODO: add coverage build (requires lcov)
  # TODO: add clang + libc++ builds for ubuntu
  job:
    name: ${{ matrix.os }}.${{ matrix.build_type }}.${{ matrix.lib }}.${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, ubuntu-22.04-arm, macos-latest]
        build_type: ['Release', 'Debug']
        compiler: ['g++', 'clang++']
        lib: ['shared', 'static']

    steps:
      - uses: actions/checkout@v4

      - name: build
        uses: threeal/cmake-action@v2.1.0
        with:
          build-dir: ${{ runner.workspace }}/_build
          cxx-compiler: ${{ matrix.compiler }}
          options: |
            BENCHMARK_DOWNLOAD_DEPENDENCIES=ON
            BUILD_SHARED_LIBS=${{ matrix.lib == 'shared' }}
            CMAKE_BUILD_TYPE=${{ matrix.build_type }}
            CMAKE_CXX_COMPILER=${{ env.CXX }}
            CMAKE_CXX_VISIBILITY_PRESET=hidden
            CMAKE_VISIBILITY_INLINES_HIDDEN=ON

      - name: test
        shell: bash
        working-directory: ${{ runner.workspace }}/_build
        run: ctest -C ${{ matrix.build_type }} -VV

  msvc:
    name: ${{ matrix.os }}.${{ matrix.build_type }}.${{ matrix.lib }}.${{ matrix.msvc }}
    runs-on: ${{ matrix.os }}
    defaults:
        run:
            shell: powershell
    strategy:
      fail-fast: false
      matrix:
        msvc:
          - VS-16-2019
          - VS-17-2022
        build_type:
          - Debug
          - Release
        lib:
          - shared
          - static
        include:
          - msvc: VS-16-2019
            os: windows-2019
            generator: 'Visual Studio 16 2019'
          - msvc: VS-17-2022
            os: windows-2022
            generator: 'Visual Studio 17 2022'

    steps:
      - uses: actions/checkout@v4

      - name: build
        uses: threeal/cmake-action@v2.1.0
        with:
          build-dir: ${{ runner.workspace }}/_build
          generator: ${{ matrix.generator }}
          options: |
            BENCHMARK_DOWNLOAD_DEPENDENCIES=ON
            BUILD_SHARED_LIBS=${{ matrix.lib == 'shared' }}

      - name: test
        working-directory: ${{ runner.workspace }}/_build
        run: ctest -C ${{ matrix.build_type }} -VV

  msys2:
    name: ${{ matrix.os }}.${{ matrix.build_type }}.${{ matrix.lib }}.${{ matrix.msys2.msystem }}
    runs-on: ${{ matrix.os }}
    defaults:
        run:
            shell: msys2 {0}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        msys2:
          - { msystem: MINGW64,    arch: x86_64,  family: GNU,  compiler: g++ }
          - { msystem: MINGW32,    arch: i686,    family: GNU,  compiler: g++ }
          - { msystem: CLANG64,    arch: x86_64,  family: LLVM, compiler: clang++ }
          - { msystem: CLANG32,    arch: i686,    family: LLVM, compiler: clang++ }
          - { msystem: UCRT64,     arch: x86_64,  family: GNU,  compiler: g++ }
        build_type:
          - Debug
          - Release
        lib:
          - shared
          - static

    steps:
      - uses: actions/checkout@v4

      - name: Install Base Dependencies
        uses: msys2/setup-msys2@v2
        with:
          cache: false
          msystem: ${{ matrix.msys2.msystem }}
          update: true
          install: >-
            git
            base-devel
          pacboy: >-
            gcc:p
            clang:p
            ninja:p

      - name: build
        uses: threeal/cmake-action@v2.1.0
        with:
          build-dir: ${{ runner.workspace }}/_build
          generator: Ninja
          cxx-compiler: ${{ matrix.msys2.msystem.compiler }}
          options: |
            BENCHMARK_DOWNLOAD_DEPENDENCIES=ON
            BUILD_SHARED_LIBS=${{ matrix.lib == 'shared' }}

      - name: test
        working-directory: ${{ runner.workspace }}/_build
        run: ctest -C ${{ matrix.build_type }} -VV
